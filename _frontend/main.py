import streamlit as st
import pandas as pd
# import plotly.express as px
import requests
import sqlite3
from fonctions import fetch_data

st.set_page_config(
    page_title="PowerPredict",
    page_icon="ğŸ“Š",
    layout="wide",
)

# Importer le CSS pour l'apparence
st.markdown(
    """
    <link href="./style.css" rel="stylesheet">
    """,
    unsafe_allow_html=True,
)

# Titres et descriptions de la page
st.title("ğŸ“Š PowerPredict")
st.write("PowerPredict est un outil de visualisation de donnÃ©es de consommation d'Ã©nergie")

loading_html = """
<div style="text-align: center;">
    <img src="https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif" width="150px" alt="Chargement...">
    <p>Chargement des donnÃ©es, veuillez patienter...</p>
</div>
"""
loading_placeholder = st.markdown(loading_html, unsafe_allow_html=True)

# Saisie des filtres par l'utilisateur
region = st.text_input("RÃ©gion", "guadeloupe", help="Entrez la rÃ©gion Ã  filtrer")
zone_climatique = st.text_input("Zone Climatique", "GUA", help="Entrez la zone climatique Ã  filtrer")

# Gestion des filtres
filters = {"region": region, "zone_climatique": zone_climatique}

if st.button("ğŸ“¥ RÃ©cupÃ©rer les donnÃ©es"):
    with st.spinner("Chargement des donnÃ©es..."):
        response = fetch_data(filters)
        
        if not response:
            st.error("ğŸš¨ Impossible de rÃ©cupÃ©rer les donnÃ©es.")
        else:
            st.success("âœ… DonnÃ©es rÃ©cupÃ©rÃ©es avec succÃ¨s !")
            st.json(response)
